{"version":3,"sources":["Components/Api.js","Components/DropdownCategories.js","Components/Search.js","Components/Header.js","Components/RenderMovie.js","Components/MovieGrid.js","Components/Main.js","Components/Footer.js","Components/MoviePage.js","Components/info.js","App.js","serviceWorker.js","index.js"],"names":["constructUrl","path","query","queryText","DropdownCategories","props","SEARCH_URL_CATEGORIES","useState","categories","setCategories","useEffect","fetch","then","res","json","data","undefined","genres","id","name","catch","err","console","log","Dropdown","style","marginRight","Toggle","variant","category","Menu","length","map","Item","href","key","onSelect","setCategory","Search","setIsLoading","handleQuery","queryInput","setQueryInput","history","useHistory","location","useLocation","parts","search","split","parts2","match","useRouteMatch","strict","sensitive","fetchMovies","SEARCH_URL","results","movies","filter","movie","genre_ids","includes","handleMovies","Form","inline","onSubmit","event","preventDefault","isExact","push","pathname","flexFlow","FormControl","type","placeholder","className","onChange","e","target","value","Button","isLoading","Spinner","animation","size","Header","Navbar","bg","expand","zIndex","to","color","textDecoration","icon","faFilm","fontSize","aria-controls","Collapse","Nav","RenderMovie","show","setShow","toogle","prevstate","marginTop","Card","width","margin","transition","Img","src","moviebackdrop","Body","Title","title","align","substr","Badge","popularity","release_date","onClick","marginLeft","marginBottom","Modal","onHide","closeButton","overview","Footer","MoviesGrid","Container","Row","backdrop_path","Main","setMovieId","faGithub","MoviePage","MOVIE_ID","params","movieItem","setMovieItem","trailers","setTrailers","actors","setActors","tmp","trailer","cast","Col","lg","backgroundImage","height","top","backgroundSize","position","right","left","background","sm","genre","padding","md","fontWeight","overflowY","v","span","Carousel","i","url","Info","person","setPerson","PERSON_ID","Photo","profile_path","backgroundColor","textAlign","fontFamily","Image","maxHeight","borderRadius","known_for_department","birthday","place_of_birth","App","setQuery","setMovies","movieId","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qRAGO,SAASA,EAAaC,EAAMC,GACjC,IAAMC,EAAYD,EAAK,iBAAaA,GAAU,GAC9C,MAAM,GAAN,OALiB,+BAKjB,YAA2BD,EAA3B,oBAJc,oCAId,OAAqDE,G,aCDxC,SAASC,EAAmBC,GACzC,IAAMC,EAAwBN,EAAa,mBAAoB,IADf,EAGZO,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAchD,OAVAC,qBAAU,WACRC,MAAML,GACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACeC,IAAhBD,EAAKE,QACPR,EAAc,CAAC,CAAES,GAAI,EAAGC,KAAM,QAAjB,mBAA6BJ,EAAKE,aAElDG,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACf,IAGF,oCACE,kBAACkB,EAAA,EAAD,CAAUC,MAAO,CAAEC,YAAa,QAC9B,kBAACF,EAAA,EAASG,OAAV,CAAiBC,QAAQ,UAAUV,GAAG,kBACnCb,EAAMwB,SAASV,MAAQ,cAG1B,kBAACK,EAAA,EAASM,KAAV,KACGtB,EAAWuB,OAAS,GACnBvB,EAAWwB,KAAI,SAACH,GAAD,OACb,kBAACL,EAAA,EAASS,KAAV,CACEC,KAAK,IACLC,IAAKN,EAASX,GACdkB,SAAU,kBAAM/B,EAAMgC,YAAYR,KAEjCA,EAASV,YC3BX,SAASmB,EAAOjC,GAAQ,IAC7BkC,EAA8BlC,EAA9BkC,aAAcC,EAAgBnC,EAAhBmC,YADc,EAEAjC,mBAAS,IAFT,mBAE7BkC,EAF6B,KAEjBC,EAFiB,OAGJnC,mBAAS,IAHL,mBAG7BsB,EAH6B,KAGnBQ,EAHmB,KAI9BM,EAAUC,cACVC,EAAWC,cACXC,EAAQF,EAASG,OAAOC,MAAM,KAC9BC,EAAS,UAAGH,EAAM,IAAKE,MAAM,KAC7BE,EAAQC,YAAc,CAC1BnD,KAAK,IACLoD,QAAQ,EACRC,WAAW,IAqCb,SAASC,IAA8B,IACjCC,EADef,EAAiB,uDAAJ,GAG9Be,EADiB,KAAff,EACWzC,EAAa,eAAgByC,GAE7BzC,EAAa,iBAE5BW,MAAM6C,GACH5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,QAAqBC,IAAjBD,EAAK0C,QAAuB,CAC9B,IAAIC,EAAS3C,EAAK0C,QACd5B,EAASX,KACXwC,EAASA,EAAOC,QAAO,SAACC,GACtB,OAAOA,EAAMC,UAAUC,SAASjC,EAASX,QAG7Cb,EAAM0D,aAAaL,OAItBtC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAGhC,OAlCAX,oBAAU6C,EAAa,CAAC1B,IACxBnB,qBAAU,WACe,IAAnBmC,EAASG,QACXO,EAAYL,EAAO,IACnBR,EAAcQ,EAAO,KAErBK,MAED,IA2BD,kBAACS,EAAA,EAAD,CAAMC,QAAM,EAACC,SAhDE,SAACC,GAChBA,EAAMC,iBACN7B,GAAa,GACbC,EAAYC,GACZc,EAAYd,GACPU,EAAMkB,SACT1B,EAAQ2B,KAAK,CACXC,SAAU,IACVvB,OAAQ,UAAYP,KAwCShB,MAAO,CAAE+C,SAAU,QAClD,kBAACpE,EAAD,CAAoByB,SAAUA,EAAUQ,YA7DrB,SAACR,GACtBU,GAAa,GACbF,EAAYR,MA4DV,kBAAC4C,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,SACZC,UAAU,UACVC,SA7DW,SAACC,GAChBpC,EAAcoC,EAAEC,OAAOC,OACvBrC,EAAQ2B,KAAK,CACXC,SAAU1B,EAAS0B,SACnBvB,OAAQ,UAAY8B,EAAEC,OAAOC,WA2D7B,kBAACC,EAAA,EAAD,CAAQrD,QAAQ,gBAAgB8C,KAAK,UAArC,SAEE,8BACGrE,EAAM6E,UACL,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASxD,QAAQ,UAAUyD,KAAK,OAEnD,O,4BCtFG,SAASC,EAAOjF,GAAQ,IAC7BmC,EAAuDnC,EAAvDmC,YAAauB,EAA0C1D,EAA1C0D,aAAcmB,EAA4B7E,EAA5B6E,UAAW3C,EAAiBlC,EAAjBkC,aAC9C,OACE,6BACE,kBAACgD,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKhE,MAAO,CAAEiE,OAAQ,MAC7C,kBAAC,IAAD,CACEC,GAAG,IACHlE,MAAO,CACLC,YAAa,OACbkE,MAAO,QACPC,eAAgB,SAGlB,kBAAC,IAAD,CACEC,KAAMC,IACNtE,MAAO,CAAEuE,SAAU,OAAQJ,MAAO,cAGtC,kBAACL,EAAA,EAAO5D,OAAR,CAAesE,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBhF,GAAG,oBAClB,kBAACiF,EAAA,EAAD,CAAKvB,UAAU,YAWf,kBAACtC,EAAD,CACEE,YAAaA,EACbuB,aAAcA,EACdmB,UAAWA,EACX3C,aAAcA,O,qCCrCX,SAAS6D,EAAY/F,GAClC,IADyC,EAGjBE,oBAAS,GAHQ,mBAGlC8F,EAHkC,KAG5BC,EAH4B,KAInCC,EAAS,WACbD,GAAQ,SAACE,GACP,OAAQA,MAIZ,OACE,yBAAK/E,MAAO,CAAEgF,UAAW,SACvB,kBAAC,IAAD,CACEd,GAAE,iBAAYtF,EAAMa,IACpBO,MAAO,CAAEoE,eAAgB,OAAQD,MAAO,UAExC,kBAACc,EAAA,EAAD,CACE9B,UAAU,aACVnD,MAAO,CACLkF,MAAO,QACPC,OAAQ,OACRC,WAAY,aAGd,kBAACH,EAAA,EAAKI,IAAN,CACElF,QAAQ,MACRmF,IAA6B,OAAxB1G,EAAM2G,cAAyB3G,EAAM0G,IAxBlD,4FA0BM,kBAACL,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,MAAO9G,EAAM8G,MAAOC,MAAM,UACnC,UAAG/G,EAAM8G,OAAQE,OAAO,EAAG,IAC3BhH,EAAM8G,MAAMpF,QAAU,GAAK,MAAQ,IAEtC,kBAACuF,EAAA,EAAD,CAAO1F,QAAQ,UAAUH,MAAO,CAAEC,YAAa,SAA/C,cACcrB,EAAMkH,YAEpB,kBAACD,EAAA,EAAD,CAAO1F,QAAQ,WAAWvB,EAAMmH,iBAItC,kBAACvC,EAAA,EAAD,CACErD,QAAQ,UACR6F,QAASlB,EACT9E,MAAO,CAAEiG,WAAY,MAAOC,aAAc,QAH5C,YAQA,kBAACC,EAAA,EAAD,CAAOvB,KAAMA,EAAMwB,OAAQtB,GACzB,kBAACqB,EAAA,EAAMtC,OAAP,CAAcwC,aAAW,GACvB,kBAACF,EAAA,EAAMV,MAAP,kBAEF,kBAACU,EAAA,EAAMX,KAAP,KACE,2BAAI5G,EAAM0H,WAEZ,kBAACH,EAAA,EAAMI,OAAP,KACE,kBAAC/C,EAAA,EAAD,CAAQrD,QAAQ,UAAU6F,QAASlB,GAAnC,Y,sBCzDK,SAAS0B,EAAW5H,GACjC,IAAMqD,EAASrD,EAAMqD,OACrB,OACE,kBAACwE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKvD,UAAU,0BACZlB,EAAO3B,OAAS,GACf2B,EAAO1B,KAAI,SAAC4B,GAAD,OACT,kBAACwC,EAAD,CACE2B,SAAUnE,EAAMmE,SAChBhB,IAAG,6CAAwCnD,EAAMwE,eACjDpB,cAAepD,EAAMwE,cACrBlH,GAAI0C,EAAM1C,GACViB,IAAKyB,EAAM1C,GACXiG,MAAOvD,EAAMuD,MACbI,WAAY3D,EAAM2D,WAClBC,aAAc5D,EAAM4D,oBChBnB,SAASa,EAAKhI,GAC3B,IAAMqD,EAASrD,EAAMqD,OACrB,OACE,oCACGA,EAAO3B,OAAS,GACf,kBAAC,EAAD,CAAW2B,OAAQA,EAAQ4E,WAAYjI,EAAMiI,c,kBCHtC,SAASN,IACtB,OACE,yBAAKpD,UAAU,eACb,2BAAOnD,MAAO,CAAEC,YAAa,SAA7B,mDAGA,uBAAGQ,KAAK,iCAAiCT,MAAO,CAAEmE,MAAO,UACvD,kBAAC,IAAD,CAAiBE,KAAMyC,Q,4CCGhB,SAASC,EAAUnI,GAChC,IAGImD,EAGAiF,EAAWpI,EAAM8C,MAAMuF,OAAOxH,GAPK,EAQLX,mBAAS,IARJ,mBAQhCoI,EARgC,KAQrBC,EARqB,OASPrI,mBAAS,IATF,mBAShCsI,EATgC,KAStBC,EATsB,OAUXvI,mBAAS,IAVE,mBAUhCwI,EAVgC,KAUxBC,EAVwB,KAgDvC,OAnCAtI,qBAAU,WACR8C,EAAaxD,EAAa,SAAD,OAAUyI,IACnC9H,MAAM6C,GACH5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL6H,EAAa7H,MAEdK,OAAM,SAAC0D,GACNzE,EAAMsC,QAAQ2B,KAAK,UAEtB,CAACmE,IAEJ/H,qBAAU,WACR8C,EAAaxD,EAAa,SAAD,OAAUyI,EAAV,YACzB9H,MAAM6C,GACH5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMkI,EAAM,GACZlI,EAAK0C,QAAQzB,KAAI,SAACkH,GAChBD,EAAI3E,KAAJ,0CAA4C4E,EAAQ/G,SAEtD2G,EAAYG,QAEf,CAACR,IAGJ/H,qBAAU,WACR8C,EAAaxD,EAAa,SAAD,OAAUyI,EAAV,aACzB9H,MAAM6C,GACH5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLiI,EAAUjI,EAAKoI,WAElB,CAACV,IAGF,oCACE,kBAACN,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CACEC,GAAI,GACJ5H,MAAO,CACL6H,gBAAgB,OAAD,OACe,OAA5BX,EAAUP,cACN,sCACAO,EAAUP,cAvDxB,kEAoDuB,KAMfmB,OAAQ,QACRC,IAAK,EACL7C,MAAO,OACP8C,eAAgB,QAChBC,SAAU,WACVC,MAAO,EACPC,KAAM,EACNlE,OAAQ,KAGZ,yBACEjE,MAAO,CACLiI,SAAU,WACV/C,MAAO,OACP4C,OAAQ,OACR7D,OAAQ,EACRmE,WACE,qEACFL,IAAK,EACLG,MAAO,EACPC,KAAM,KAGV,kBAACR,EAAA,EAAD,CAAKC,GAAI,GAAIS,GAAI,GAAIrI,MAAO,CAAEiE,OAAQ,MACnCiD,EAAU1H,OACP0H,EAAU1H,OAAOe,KAAI,SAAC+H,GACpB,OACE,kBAACzC,EAAA,EAAD,CACE7F,MAAO,CACLgF,UAAW,OACX/E,YAAa,OACbgG,WAAY,OACZsC,QAAS,QAEXpI,QAAQ,WAEPmI,EAAM5I,SAIb,MAEN,kBAACiI,EAAA,EAAD,CACEC,GAAI,EACJY,GAAI,EACJH,GAAI,GACJrI,MAAO,CACLiE,OAAQ,IACRM,SAAU,OACVkE,WAAY,OACZtE,MAAO,qBAGT,uBAAGnE,MAAO,CAAEiG,WAAY,SAAxB,WACA,wBACEjG,MAAO,CACL8H,OAAQ,OACRY,UAAW,WAGZpB,EAAO/G,KAAI,SAACoI,GACX,OACE,kBAAC,IAAD,CAAMxF,UAAU,cAAce,GAAE,kBAAayE,EAAElJ,KAC7C,4BAAKkJ,EAAEjJ,YAOjB,kBAACiI,EAAA,EAAD,CAAKC,GAAI,CAAEgB,KAAM,GAAKP,GAAI,GAAIrI,MAAO,CAAEgF,UAAW,SAChD,kBAAC6D,EAAA,EAAD,CAAU7I,MAAO,CAAEiE,OAAQ,IACxBmD,EAAS7G,KAAI,SAACoI,EAAGG,GAChB,OACE,kBAACD,EAAA,EAASrI,KAAV,KACE,kBAAC,IAAD,CAAa0E,MAAM,OAAOxE,IAAG,eAAUoI,GAAKC,IAAKJ,Y,aClJpD,SAASK,EAAKpK,GAC3B,IAKImD,EAN8B,EAINjD,mBAAS,IAJH,mBAI3BmK,EAJ2B,KAInBC,EAJmB,KAK9BC,EAAYvK,EAAM8C,MAAMuF,OAAOxH,GAEnCI,QAAQC,IAAIlB,EAAM8C,MAAMuF,OAAOxH,IAE/BR,qBAAU,WACR8C,EAAaxD,EAAa,UAAD,OAAW4K,IACpCjK,MAAM6C,GACH5C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL4J,EAAU5J,QAEb,CAAC6J,IACJ,IAAIC,EAAK,6CAAyCH,EAAOI,cACzD,OACE,oCACE,yBACErJ,MAAO,CACLkF,MAAO,OACP4C,OAAQ,QACRwB,gBAAiB,aAGnB,yBACEtJ,MAAO,CACLuJ,UAAW,SACXtD,WAAY,OACZuD,WAAY,QACZjF,SAAU,OACVmE,UAAW,WAGb,kBAACe,EAAA,EAAD,CACEzJ,MAAO,CACL0J,UAAW,QACX1E,UAAW,OACXkB,aAAc,MACdyD,aAAc,QAEhBrE,IACY,4CAAV8D,EACIA,EA3Cd,qFA+CM,oCAAUH,EAAOvJ,MACjB,qDAA2BuJ,EAAOW,sBAClC,8CAAoBX,EAAOY,UAC3B,+CAAqBZ,EAAOa,mBC9CvB,SAASC,EAAInL,GAAQ,IAAD,EACCE,oBAAS,GADV,mBAC1B2E,EAD0B,KACf3C,EADe,OAEPhC,mBAAS,IAFF,mBAE1BL,EAF0B,KAEnBuL,EAFmB,OAGLlL,mBAAS,IAHJ,mBAG1BmD,EAH0B,KAGlBgI,EAHkB,OAIHnL,mBAAS,IAJN,mBAI1BoL,EAJ0B,KAIjBrD,EAJiB,KAejC,OACE,kBAAC,IAAD,KACE,yBAAK1D,UAAU,kBACb,yBAAKA,UAAU,gBACb,kBAACU,EAAD,CACE9C,YAdU,SAACtC,GACnBuL,EAASvL,IAcD6D,aAXW,SAACL,GACpBgI,EAAUhI,GACVnB,GAAa,IAUL2C,UAAWA,EACX3C,aAAcA,IAEhB,kBAAC,IAAD,CAAOtC,KAAK,oCACV,kBAAC,IAAD,CAAU0F,GAAG,KAAb,MAGF,kBAAC,IAAD,CAAO1F,KAAK,aAAa2L,UAAWpD,IACpC,kBAAC,IAAD,CAAOvI,KAAK,cAAc2L,UAAWnB,IACrC,kBAAC,IAAD,CAAOoB,OAAK,EAAC5L,KAAK,KAChB,kBAACoI,EAAD,CACEnD,UAAWA,EACX3C,aAAcA,EACdmB,OAAQA,EACRxD,MAAOA,EACPoI,WAAYA,EACZqD,QAASA,MAIf,kBAAC,EAAD,QCxCYG,QACW,cAA7BC,OAAOlJ,SAASmJ,UAEe,UAA7BD,OAAOlJ,SAASmJ,UAEhBD,OAAOlJ,SAASmJ,SAAS7I,MACvB,2DCXN8I,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3L,MAAK,SAAA4L,GACJA,EAAaC,gBAEdrL,OAAM,SAAAsL,GACLpL,QAAQoL,MAAMA,EAAMC,a","file":"static/js/main.755903c1.chunk.js","sourcesContent":["const TMDB_BASE_URL = `https://api.themoviedb.org/3`;\r\nconst API_KEY = \"542003918769df50083a13c415bbc602\";\r\n\r\nexport function constructUrl(path, query) {\r\n  const queryText = query ? `&query=${query}` : \"\";\r\n  return `${TMDB_BASE_URL}/${path}?api_key=${API_KEY}${queryText}`;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { constructUrl } from \"./Api\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nexport default function DropdownCategories(props) {\r\n  const SEARCH_URL_CATEGORIES = constructUrl(\"genre/movie/list\", \"\");\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n    fetch(SEARCH_URL_CATEGORIES)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.genres !== undefined)\r\n          setCategories([{ id: 0, name: \"All\" }, ...data.genres]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [SEARCH_URL_CATEGORIES]);\r\n\r\n  return (\r\n    <>\r\n      <Dropdown style={{ marginRight: \"5px\" }}>\r\n        <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\r\n          {props.category.name || \"Categories\"}\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          {categories.length > 0 &&\r\n            categories.map((category) => (\r\n              <Dropdown.Item\r\n                href=\"#\"\r\n                key={category.id}\r\n                onSelect={() => props.setCategory(category)}\r\n              >\r\n                {category.name}\r\n              </Dropdown.Item>\r\n            ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, FormControl, Spinner } from \"react-bootstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport DropdownCategories from \"./DropdownCategories\";\r\nimport { constructUrl } from \"./Api\";\r\n\r\nexport default function Search(props) {\r\n  const { setIsLoading, handleQuery } = props;\r\n  const [queryInput, setQueryInput] = useState(\"\");\r\n  const [category, setCategory] = useState({});\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const parts = location.search.split(\"&\");\r\n  const parts2 = `${parts[0]}`.split(\"=\");\r\n  const match = useRouteMatch({\r\n    path: `/`,\r\n    strict: true,\r\n    sensitive: true,\r\n  });\r\n  const changeCategory = (category) => {\r\n    setIsLoading(true);\r\n    setCategory(category);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setQueryInput(e.target.value);\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: \"?query=\" + e.target.value,\r\n    });\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    handleQuery(queryInput);\r\n    fetchMovies(queryInput);\r\n    if (!match.isExact) {\r\n      history.push({\r\n        pathname: \"/\",\r\n        search: \"?query=\" + queryInput,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(fetchMovies, [category]);\r\n  useEffect(() => {\r\n    if (location.search != \"\") {\r\n      fetchMovies(parts2[1]);\r\n      setQueryInput(parts2[1]);\r\n    } else {\r\n      fetchMovies();\r\n    }\r\n  }, []);\r\n\r\n  function fetchMovies(queryInput = \"\") {\r\n    let SEARCH_URL;\r\n    if (queryInput !== \"\") {\r\n      SEARCH_URL = constructUrl(\"search/movie\", queryInput);\r\n    } else {\r\n      SEARCH_URL = constructUrl(\"movie/popular\");\r\n    }\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.results !== undefined) {\r\n          let movies = data.results;\r\n          if (category.id) {\r\n            movies = movies.filter((movie) => {\r\n              return movie.genre_ids.includes(category.id);\r\n            });\r\n          }\r\n          props.handleMovies(movies);\r\n        }\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Form inline onSubmit={onSubmit} style={{ flexFlow: \"row\" }}>\r\n      <DropdownCategories category={category} setCategory={changeCategory} />\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className=\"mr-sm-2\"\r\n        onChange={onChange}\r\n      />\r\n      <Button variant=\"outline-light\" type=\"submit\">\r\n        Search\r\n        <span>\r\n          {props.isLoading ? (\r\n            <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />\r\n          ) : (\r\n            \" \"\r\n          )}\r\n        </span>\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Search from \"./Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Header(props) {\r\n  const { handleQuery, handleMovies, isLoading, setIsLoading } = props;\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" expand=\"lg\" style={{ zIndex: 1000 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            marginRight: \"20px\",\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faFilm}\r\n            style={{ fontSize: \"25px\", color: \"#FFC107\" }}\r\n          />\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"basic-Navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-Navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <Link\r\n              to=\"/\"\r\n              style={{\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              Home\r\n            </Link> */}\r\n          </Nav>\r\n          <Search\r\n            handleQuery={handleQuery}\r\n            handleMovies={handleMovies}\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Modal, Button } from \"react-bootstrap\";\r\nimport \"./BoxShadow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderMovie(props) {\r\n  const nullPhoto =\r\n    \"https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png\";\r\n  const [show, setShow] = useState(false);\r\n  const toogle = () => {\r\n    setShow((prevstate) => {\r\n      return !prevstate;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }}>\r\n      <Link\r\n        to={`/movie/${props.id}`}\r\n        style={{ textDecoration: \"none\", color: \"black\" }}\r\n      >\r\n        <Card\r\n          className=\"shadow-box\"\r\n          style={{\r\n            width: \"300px\",\r\n            margin: \"20px\",\r\n            transition: \"width 2s\",\r\n          }}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={props.moviebackdrop !== null ? props.src : nullPhoto}\r\n          />\r\n          <Card.Body>\r\n            <Card.Title title={props.title} align=\"middle\">\r\n              {`${props.title}`.substr(0, 20)}\r\n              {props.title.length >= 25 ? \"...\" : \"\"}\r\n            </Card.Title>\r\n            <Badge variant=\"warning\" style={{ marginRight: \"65px\" }}>\r\n              Popularity:{props.popularity}\r\n            </Badge>\r\n            <Badge variant=\"primary\">{props.release_date}</Badge>\r\n          </Card.Body>\r\n        </Card>\r\n      </Link>\r\n      <Button\r\n        variant=\"warning\"\r\n        onClick={toogle}\r\n        style={{ marginLeft: \"35%\", marginBottom: \"5px\" }}\r\n      >\r\n        Overview\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={toogle}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>OverView</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{props.overview}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"warning\" onClick={toogle}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport RenderMovie from \"./RenderMovie\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nexport default function MoviesGrid(props) {\r\n  const movies = props.movies;\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        {movies.length > 0 &&\r\n          movies.map((movie) => (\r\n            <RenderMovie\r\n              overview={movie.overview}\r\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n              moviebackdrop={movie.backdrop_path}\r\n              id={movie.id}\r\n              key={movie.id}\r\n              title={movie.title}\r\n              popularity={movie.popularity}\r\n              release_date={movie.release_date}\r\n            />\r\n          ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MovieGrid from \"./MovieGrid\";\r\n\r\nexport default function Main(props) {\r\n  const movies = props.movies;\r\n  return (\r\n    <>\r\n      {movies.length > 0 && (\r\n        <MovieGrid movies={movies} setMovieId={props.setMovieId} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <small style={{ marginRight: \"20px\" }}>\r\n        Developed with ❤ by bawan-shna-abdulrahman\r\n      </small>\r\n      <a href=\"https://github.com/shna-rafeeq\" style={{ color: \"white\" }}>\r\n        <FontAwesomeIcon icon={faGithub} />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { constructUrl } from \"./Api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./actorsLink.css\";\r\nimport {\r\n  Card,\r\n  Badge,\r\n  Carousel,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport default function MoviePage(props) {\r\n  const nullPhoto =\r\n    \"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\";\r\n\r\n  let SEARCH_URL;\r\n  // let { id } = useParams();\r\n  // let MOVIE_ID = id;\r\n  let MOVIE_ID = props.match.params.id;\r\n  const [movieItem, setMovieItem] = useState({});\r\n  const [trailers, setTrailers] = useState([]);\r\n  const [actors, setActors] = useState([]);\r\n\r\n  // fetch each movie\r\n  useEffect(() => {\r\n    SEARCH_URL = constructUrl(`movie/${MOVIE_ID}`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMovieItem(data);\r\n      })\r\n      .catch((e) => {\r\n        props.history.push(\"/\");\r\n      });\r\n  }, [MOVIE_ID]);\r\n  //fetch trailers\r\n  useEffect(() => {\r\n    SEARCH_URL = constructUrl(`movie/${MOVIE_ID}/videos`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const tmp = [];\r\n        data.results.map((trailer) => {\r\n          tmp.push(`https://www.youtube.com/watch?v=${trailer.key}`);\r\n        });\r\n        setTrailers(tmp);\r\n      });\r\n  }, [MOVIE_ID]);\r\n\r\n  //fetch actors\r\n  useEffect(() => {\r\n    SEARCH_URL = constructUrl(`movie/${MOVIE_ID}/credits`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setActors(data.cast);\r\n      });\r\n  }, [MOVIE_ID]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col\r\n          lg={12}\r\n          style={{\r\n            backgroundImage: `url(${\r\n              movieItem.backdrop_path !== null\r\n                ? \"https://image.tmdb.org/t/p/original\" +\r\n                  movieItem.backdrop_path\r\n                : nullPhoto\r\n            })`,\r\n            height: \"100vh\",\r\n            top: 0,\r\n            width: \"100%\",\r\n            backgroundSize: \"cover\",\r\n            position: \"absolute\",\r\n            right: 0,\r\n            left: 0,\r\n            zIndex: 1,\r\n          }}\r\n        ></Col>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 2,\r\n            background:\r\n              \"linear-gradient(rgba(4, 4, 4, 0.9) 0%, rgba(255, 255, 255, 0) 95%)\",\r\n            top: 0,\r\n            right: 0,\r\n            left: 0,\r\n          }}\r\n        ></div>\r\n        <Col lg={12} sm={12} style={{ zIndex: 200 }}>\r\n          {movieItem.genres\r\n            ? movieItem.genres.map((genre) => {\r\n                return (\r\n                  <Badge\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      marginRight: \"20px\",\r\n                      marginLeft: \"10px\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                    variant=\"warning\"\r\n                  >\r\n                    {genre.name}\r\n                  </Badge>\r\n                );\r\n              })\r\n            : null}\r\n        </Col>\r\n        <Col\r\n          lg={3}\r\n          md={3}\r\n          sm={12}\r\n          style={{\r\n            zIndex: 200,\r\n            fontSize: \"40px\",\r\n            fontWeight: \"bold\",\r\n            color: \"rgb(102, 84, 23)\",\r\n          }}\r\n        >\r\n          <p style={{ marginLeft: \"10px\" }}>Actors:</p>\r\n          <ol\r\n            style={{\r\n              height: \"50vh\",\r\n              overflowY: \"scroll\",\r\n            }}\r\n          >\r\n            {actors.map((v) => {\r\n              return (\r\n                <Link className=\"actors-link\" to={`/person/${v.id}`}>\r\n                  <li>{v.name}</li>\r\n                </Link>\r\n              );\r\n            })}\r\n          </ol>\r\n        </Col>\r\n\r\n        <Col lg={{ span: 8 }} sm={12} style={{ marginTop: \"60px\" }}>\r\n          <Carousel style={{ zIndex: 3 }}>\r\n            {trailers.map((v, i) => {\r\n              return (\r\n                <Carousel.Item>\r\n                  <ReactPlayer width=\"100%\" key={`haha-${i}`} url={v} />\r\n                </Carousel.Item>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </Col>\r\n\r\n        {/* <Col lg={12} style={{ zIndex: 200 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              marginLeft: \"50%\",\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              padding: \"5px\",\r\n              backgroundColor: \" #ffc107\",\r\n              borderRadius: \"0.25rem\",\r\n              borderColor: \"#ffc107\",\r\n            }}\r\n          >\r\n            Back\r\n          </Link>\r\n        </Col> */}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { constructUrl } from \"./Api\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nexport default function Info(props) {\r\n  const nullPhoto =\r\n    \"https://bitsofco.de/content/images/2018/12/Screenshot-2018-12-16-at-21.06.29.png\";\r\n\r\n  const [person, setPerson] = useState({});\r\n  let PERSON_ID = props.match.params.id;\r\n  let SEARCH_URL;\r\n  console.log(props.match.params.id);\r\n\r\n  useEffect(() => {\r\n    SEARCH_URL = constructUrl(`person/${PERSON_ID}`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPerson(data);\r\n      });\r\n  }, [PERSON_ID]);\r\n  let Photo = `https://image.tmdb.org/t/p/original${person.profile_path}`;\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#ece4c10\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginLeft: \"10px\",\r\n            fontFamily: \"Arial\",\r\n            fontSize: \"20px\",\r\n            overflowY: \"hidden\",\r\n          }}\r\n        >\r\n          <Image\r\n            style={{\r\n              maxHeight: \"500px\",\r\n              marginTop: \"50px\",\r\n              marginBottom: \"5px\",\r\n              borderRadius: \"30px\",\r\n            }}\r\n            src={\r\n              Photo !== \"https://image.tmdb.org/t/p/originalnull\"\r\n                ? Photo\r\n                : nullPhoto\r\n            }\r\n          ></Image>\r\n          <p>Name: {person.name}</p>\r\n          <p> known_for_department: {person.known_for_department}</p>\r\n          <p> Date of birth: {person.birthday}</p>\r\n          <p> place of birth: {person.place_of_birth}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Header from \"./Components/Header\";\r\nimport Main from \"./Components/Main\";\r\nimport Footer from \"./Components/Footer\";\r\nimport MoviePage from \"./Components/MoviePage\";\r\nimport Info from \"./Components/info\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function App(props) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [movieId, setMovieId] = useState(\"\");\r\n\r\n  const handleQuery = (query) => {\r\n    setQuery(query);\r\n  };\r\n\r\n  const handleMovies = (movies) => {\r\n    setMovies(movies);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"page-container\">\r\n        <div className=\"content-wrap\">\r\n          <Header\r\n            handleQuery={handleQuery}\r\n            handleMovies={handleMovies}\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n          <Route path=\"/iraq-bc-movies-project-students\">\r\n            <Redirect to=\"/\"> </Redirect>\r\n          </Route>\r\n\r\n          <Route path=\"/movie/:id\" component={MoviePage} />\r\n          <Route path=\"/person/:id\" component={Info} />\r\n          <Route exact path=\"/\">\r\n            <Main\r\n              isLoading={isLoading}\r\n              setIsLoading={setIsLoading}\r\n              movies={movies}\r\n              query={query}\r\n              setMovieId={setMovieId}\r\n              movieId={movieId}\r\n            />\r\n          </Route>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}